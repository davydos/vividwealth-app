# CD workflow for VividWealth app
# Runs on push to main branch and tag releases
# Required secrets: EXPO_TOKEN, SLACK_WEBHOOK_URL, SENTRY_AUTH_TOKEN, SENTRY_ORG, SENTRY_PROJECT

name: VividWealth CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      
      - name: Install EAS CLI
        run: npm install -g eas-cli
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install Sentry CLI
        run: npm install -g @sentry/cli
      
      - name: Determine environment
        id: determine-env
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "ENV=production" >> $GITHUB_ENV
            echo "PROFILE=production" >> $GITHUB_ENV
          else
            echo "ENV=preview" >> $GITHUB_ENV
            echo "PROFILE=preview" >> $GITHUB_ENV
          fi
      
      - name: Set environment variables
        run: |
          if [[ "${{ env.PROFILE }}" == "production" ]]; then
            echo "SENTRY_ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "SENTRY_ENVIRONMENT=staging" >> $GITHUB_ENV
          fi
      
      - name: Validate Sentry credentials
        run: |
          if [ -z "${{ secrets.SENTRY_AUTH_TOKEN }}" ] || [ -z "${{ secrets.SENTRY_ORG }}" ] || [ -z "${{ secrets.SENTRY_PROJECT }}" ]; then
            echo "::warning::Missing or incomplete Sentry credentials. Source maps upload may fail."
          else
            echo "Sentry credentials validated"
          fi
      
      - name: Build & Submit
        run: |
          npx eas-cli build --platform all --profile ${{ env.PROFILE }} --non-interactive
          npx eas-cli submit --platform all --profile ${{ env.PROFILE }} --non-interactive
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      
      - name: Manual Sentry Source Maps Upload (fallback)
        if: success() && env.PROFILE == 'production'
        run: |
          if [ -n "${{ secrets.SENTRY_AUTH_TOKEN }}" ] && [ -n "${{ secrets.SENTRY_ORG }}" ] && [ -n "${{ secrets.SENTRY_PROJECT }}" ]; then
            echo "Uploading source maps to Sentry (fallback method)"
            VERSION=$(node -p "require('./app.json').expo.version")
            
            # Upload source maps if the post-publish hook failed
            sentry-cli releases new "$VERSION"
            sentry-cli releases set-commits --auto "$VERSION"
            
            # Find and upload source maps in the .expo directory
            find .expo -name "*.map" -type f -exec sentry-cli releases files "$VERSION" upload-sourcemaps --dist "$VERSION" {} \;
            
            sentry-cli releases finalize "$VERSION"
            echo "Source maps uploaded to Sentry"
          else
            echo "::warning::Skipping manual source maps upload due to missing Sentry credentials"
          fi
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      
      - name: Create Release (for tags only)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            *.aab
            *.apk
            *.ipa
            *.zip
      
      - name: Notify Team
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
      
      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ github.ref_name }}
          path: |
            *.aab
            *.apk
            *.ipa
            *.zip
          retention-days: 90 